[{"categories":null,"content":"Miscellaneous Challenge a CTF","date":"2023-10-16","objectID":"/blog/misc/misc/","tags":null,"title":"Miscellaneous Challenge","uri":"/blog/misc/misc/"},{"categories":null,"content":"On a recent CTF that I competed in, me and my team had worked together on an incredibly tough Misc challenge. Considering that this was the first of many challenges, it was quite an arduous task. After attempting to complete this, my team and I had realised that we may not have trained enough for this CTF challenge. Despite this, I wanted to give a small write up detailing what we managed to accomplish as this was a considerably enjoyable challenge. The Email Within the challenge .ZIP folder contained a singular .TXT email file. We can see in this email that it covers many areas. The first email holds a lot of information, starting with Jenny’s “jfeng@veryrealmail.com”. Then, we have her personal information: Date of Birth: 02/08/1990 Postal Code: 00100 Weight: 61kg Next, we can see the email provides us with a .ZIP but it is password protected. The problem that we are faced with, is that we have not been provided this password as it was in their previous emails. We are also provided with another attachment, which appears to be a receipt, asking us to make sure the (m)data is correct, assuming this could be meta data, maybe steganography. The main problem currently, is that we do not have access to either attachment, but it does provide us with 2 Base64 strings. One of which is far too long to input on this website however, I can paste the other. The First Base64 UEsDBDMAAQBjABt3Q1cAAAAAPwAAACMAAAAIAAsAZmxhZy50eHQBmQcAAgBBRQMAALXlHmkDJrqpuC6UsKfMRf0ryv1ot/Vf0o0rJl7iNPv+pINt/HGY9cx7/J7HpS5xfce96yETu2enDZD+8nLU31BLAQI/ADMAAQBjABt3Q1cAAAAAPwAAACMAAAAIAC8AAAAAAAAAIAAAAAAAAABmbGFnLnR4dAoAIAAAAAAAAQAYANdGZhT59dkBWFt5Lfn12QFO9TAOV8XZAQGZBwACAEFFAwAAUEsFBgAAAAABAAEAZQAAAHAAAAAAAA== Once this is put into Cyberchef, we are given a very odd string: But the email states it is Base64 encoding. I then noticed that it is a .ZIP as previously stated. So, I did some research and found Base64 to file from Base64 guru. This website gave us Application.zip containing a .TXT file however, it seems to be password protected with no password in sight. There must be a password. I continued on as I would normally, with the information that there was a password given previously. Maybe it could be elsewhere, perhaps the metadata of the .PNG of the next Base64 encoding. As expected, Cyberchef could not decode it as it is an image however, one must test these things. The Second Base64 As cyberchef had an issue, I had to find another alternative. As we were loading an image from Base64, it was only natural to go for a Base64 to image. So I found a website with such services and it returned: Stenography We were told “(m)data”; I believe this to be the meta data. So, I loaded up my Kali Linux machine with a stenography tool and looked at the meta data. I could use basic websites, but I prefer to perfect the skills with tools rather than use websites. I decided to use an easy tool, as I was only searching the meta data. As explained in the Copyright field, there is a password format, “birthDateMail***R3ply!”. It was specified by the creators. The asterixis’ are random characters/symbols, which means we have a base password format with 3 random characters. We have all the information and this would be: ``` 900802jfeng@veryrealmail.com***R3ply! But what are the three characters? I had to write a script on Python in order to cover every possible combination. Python Program import itertools import string email_address = \"900802jfeng@veryrealmail.com***R3ply!\" characters = string.ascii_letters + string.digits + \"!@#$%^\u0026*()-_=+[]{}|;:'\\\",.\u003c\u003e?/\\\\~`\" # Alphabets, numbers, and special characters # Find asterisk positions asterisk_positions = [pos for pos, char in enumerate(email_address) if char == \"*\"] # Generate combinations of single characters combinations = itertools.product(characters, repeat=len(asterisk_positions)) #output file name output_file = \"email_combinations.txt\" # Open the file for writing with open(output_file, \"w\") as file: # Iterate through the comb","date":"2023-10-16","objectID":"/blog/misc/misc/:0:0","tags":null,"title":"Miscellaneous Challenge","uri":"/blog/misc/misc/"},{"categories":null,"content":"My first box on HTB","date":"2023-08-30","objectID":"/blog/meow/meow/","tags":null,"title":"HTB: Meow","uri":"/blog/meow/meow/"},{"categories":null,"content":"Introduction I was successful in completing my first HackTheBox machine, by the name of “Meow”. This was a great introduction, as it allowed me to acclimatise to these machines and to understand how they function. In order for me to hack these boxes, I will be utilising my own personal machine, which is running Parrot OS on VMware. Before we begin to hack this machine, we must first answer a couple of questions. Task 1 This is a relatively simple question, with the answer being Virtual Machine. Task 2 The next answer is Terminal. With the usage of Linux, Terminal is going to be one of the more commonly used tools, aiding me to fulfil tasks. Task 3 Using HTB and THM, you will most likely be using OpenVPN in order to continue using the boxes. Task 4 To test our connection with a box, you use an ICMP echo request called ping. Starting point - Ping It is important that you are connected to the boxes, before you can begin hacking them. We can do this by performing the command ping, followed by the machine’s IP. Below is an example of the command ping being performed: ping machineIP Once we know that the machine is connected, we can continue with the machine. Task 5 The next tool we will be using is nmap. Nmap gives us plenty of options, those of which, we will explore in other boxes that I will complete later on, in this website. Using Nmap The next action being taken will be an nmap scan. This scan will consist of using -sV; a scan allowing myself to see the services running on certain ports and their version. I also use -vv; this allows the scan to increase verbosity significantly. Below, you can see the scan in question: nmap -sV -vv machineIP Nmap Result Once the scan has been concluded, we will then see a list of results. It is of considerable length however, I have taken a snippet of the most important part. This will showcase the ports and services running on these. Evidently, there is only 1 port visibly. This is telnet, and it allows us to answer our next task. Task 6 As we can see in the above scan, port 23 is telnet. This means, we have now answered our next task. Our next step is to prepare to use this service in order to penetrate further into the bo Telnet We now use the terminal in order to login to telnet using the command: telnet machineIP Task 7 The final question is looking for the username which doesn’t require a password on telnet, for which the answer is root. Telnet Login Using the the default credential of root, I can then login to telnet and instantly be allowed access with root privileges. Upon completion of this step, we can now access the 1s command to view the accessible files: I then login to telnet using the default credential of root and was instantly allowed access with root privileges we can now access the ls command to see what files are accessible: As showcased below, we can see that there is a flag.txt file. This contains the final flag to complete this box. In order to print the contents of the file, we must use the cat command: We can clearly see there is a flag.txt file which is what our last task is on HTB, we will need to cat into this file providing the command cat flag.txt This will allow us to see the flag. Finish This concludes the finishing stages for the first box on HackTheBox. It proved to be a pleasant introduction and provides a good insight for what the future of this website will hold. I have learnt the basics of telnet and found it rather interesting to engage with. This newfound interest has sparked a curiosity, and I would like to see some exploits with telnet. Thank you for reading and joining me on my first post, and I hope you learned something too! ","date":"2023-08-30","objectID":"/blog/meow/meow/:0:0","tags":null,"title":"HTB: Meow","uri":"/blog/meow/meow/"},{"categories":null,"content":"During my time at Coventry University, I explored facets of cyber security and ethical hacking, in which I proudly earned a first-class honours. This was followed by a master’s degree in the same field of cyber security. I became interested in and started practicing computing back in 2014, which continued throughout college. This opened me up to the realm of cyber security and, in time, ethical hacking. Outside of my academic pursuits, I spend my time gaming, but I also love to learn and study. That’s why I decided to create this website - to enable me to possess a virtual space to reflect on my academic journey and progress, primarily my capture the flag events and challenges provided by websites such as TryHackMe.com and HackTheBox.com. This website also allows me to showcase any ongoing projects that I am currently doing. This will serve as a method of tracking my own progression, while also offering the potential to help others who are on similar paths to me. I am well versed in many areas of IT, and my knowledge in these areas are diverse. From experimenting with web design and programming (Python and C). I am currently attempting to delve deeper with Python and C, while also exploring new languages such as Rust, Node/JS and C++ and C#. My interests extend beyond coding. I have successfully built computers from scratch and have provided IT support. This encompasses assisting with repairs and supplying basic guides and installs for beginner users. Looking forward, I am determined to enter the field of offensive security, though I remain open to jobs on the defensive security side. My philosophy is simple “Follow your passions, and success will follow.” ","date":"0001-01-01","objectID":"/about/:0:0","tags":null,"title":"About Jamie","uri":"/about/"}]